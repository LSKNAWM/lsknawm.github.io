<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>云计算国赛 - 容器云应用部署</title>
      <link href="/2023/10/03/yun-ji-suan-guo-sai-rong-qi-yun-ying-yong-bu-shu/"/>
      <url>/2023/10/03/yun-ji-suan-guo-sai-rong-qi-yun-ying-yong-bu-shu/</url>
      
        <content type="html"><![CDATA[<h4 id="容器云应用部署"><a href="#容器云应用部署" class="headerlink" title="容器云应用部署"></a>容器云应用部署</h4><ul><li><ul><li><a href="#_2Docker_Compose_70__4">【任务 2】容器云应用部署：Docker Compose 编排部署 [7.0 分]</a></li><li><ul><li><a href="#_1_MariaDB_1__8">【题目 1】容器化 MariaDB 服务 [1 分]</a></li><li><a href="#_2Redis_1__72">【题目 2】容器化 Redis 服务 [1 分]</a></li><li><a href="#_3Nginx_05__101">【题目 3】容器化 Nginx 服务 [0.5 分]</a></li><li><a href="#_4Hyperf_1__129">【题目 4】容器化 Hyperf 服务 [1 分]</a></li><li><a href="#_5Hyperf_35__177">【题目 5】编排部署 Hyperf 框架 [3.5 分]</a></li></ul></li></ul></li></ul><p>前言：前三题都是常见的容器构建，而第四题的构建是自己推测的，存在一点问题，仅供学习参考，还未解决，最后的 docker-compose 则是借鉴的，是没啥问题的。</p><p>有需要可以加群 q726922223 大家相互交流一下解题思路。</p><h3 id="【任务-2】容器云应用部署：Docker-Compose-编排部署-7-0-分"><a href="#【任务-2】容器云应用部署：Docker-Compose-编排部署-7-0-分" class="headerlink" title="【任务 2】容器云应用部署：Docker Compose 编排部署 [7.0 分]"></a>【任务 2】容器云应用部署：Docker Compose 编排部署 [7.0 分]</h3><p>Hyperf 是一个高性能、高灵活性的渐进式 PHP <a href="https://so.csdn.net/so/search?q=%E5%8D%8F%E7%A8%8B&amp;spm=1001.2101.3001.7020">协程</a>框架，内置协程服务器及大量常用的组件，性能较传统基于 PHP-FPM 的框架有质的提升，提供超高性能的同时，也保持着极其灵活的可扩展性。请根据要求完成数据库服务 MariaDB、缓存服务 Redis、微服务 Hyperf 及前端服务 Nginx 按照要求进行容器化。</p><h4 id="【题目-1】容器化-MariaDB-服务-1-分"><a href="#【题目-1】容器化-MariaDB-服务-1-分" class="headerlink" title="【题目 1】容器化 MariaDB 服务 [1 分]"></a>【题目 1】容器化 <a href="https://so.csdn.net/so/search?q=MariaDB&amp;spm=1001.2101.3001.7020">MariaDB</a> 服务 [1 分]</h4><p>编写 Dockerfile 文件构建 hyperf-mariadb:v1.0 镜像，具体要求如下：（需要用到的软件包：<br>Hyperf.tar.gz）</p><p>（1）基础镜像：centos:7.9.2009；<br>（2）完成 MariaDB 服务的安装；<br>（3）声明端口：3306；<br>（4）设置数据库 root 用户的密码为 root；<br>（5）将提供的数据库文件 hyperf_admin.sql 导入数据库；<br>（6）设置服务开机自启。<br>完成后构建镜像，并提交 master 节点的用户名、密码和 IP 地址到答题框。</p><p>1，上传 <a href="https://so.csdn.net/so/search?q=centos%E9%95%9C%E5%83%8F&amp;spm=1001.2101.3001.7020">centos 镜像</a></p><pre class="line-numbers language-none"><code class="language-none">[root@k8s-master-node1 images]# docker load -i centos_7.9.2009.tar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2，构建初始化脚本</p><pre class="line-numbers language-none"><code class="language-none">#mysql初始化自启动脚本[root@k8s-master-node1 Hyperf]# cat mysql_init.sh#!/bin/bashmysql_install_db --user=rootmysqld_safe --user=root &amp;sleep 8mysqladmin -u root password 'root'mysql -uroot -proot -e "grant all on *.* to 'root'@'%' identified by 'root'; flush privileges;"mysql -uroot -proot -e " source /opt/hyperf_admin.sql;"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3，配置 yum 源</p><pre class="line-numbers language-none"><code class="language-none">#镜像本地yum源[root@k8s-master-node1 Hyperf]# cat local.repo[hypref]name=hyprefbaseurl=file:///root/yumgpgcheck=0enabled=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4，开始构建</p><pre class="line-numbers language-none"><code class="language-none">[root@k8s-master-node1 Hyperf]# cat Dockerfile-mariadbFROM centos:centos7.9.2009MAINTAINER ChinaskillsRUN rm -rf /etc/yum.repos.d/*COPY local.repo /etc/yum.repos.d/COPY yum /root/yumENV LC_ALL en_US.UTF-8RUN yum -y install mariadb-serverCOPY sql /opt/COPY mysql_init.sh /opt/RUN bash /opt/mysql_init.shEXPOSE 3306CMD ["mysqld_safe","--user=root"][root@k8s-master-node1 Hyperf]# docker build -t hyperf-mariadb:v1.0 -f Dockerfile-mariadb .<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>镜像构建成功得 0.5 分；  </li><li>数据库安装且导入数据成功得 0.5 分。</li></ol><h4 id="【题目-2】容器化-Redis-服务-1-分"><a href="#【题目-2】容器化-Redis-服务-1-分" class="headerlink" title="【题目 2】容器化 Redis 服务 [1 分]"></a>【题目 2】容器化 Redis 服务 [1 分]</h4><p>编写 Dockerfile 文件构建 hyperf-redis:v1.0 镜像，具体要求如下：（需要用到的软件包：<br>Hyperf.tar.gz）<br>（1）基础镜像：centos:7.9.2009；<br>（2）安装 Redis 服务；<br>（3）关闭保护模式；<br>（4）声明端口：6379；<br>（5）设置服务开机自启。<br>完成后构建镜像，并提交 master 节点的用户名、密码和 IP 地址到答题框。</p><pre class="line-numbers language-none"><code class="language-none">[root@k8s-master-node1 Hyperf]# cat Dockerfile-redisFROM centos:centos7.9.2009MAINTAINER huhyRUN rm -rf /etc/yum.repos.d/*COPY local.repo /etc/yum.repos.d/COPY yum /root/yumRUN yum -y install redisRUN sed -i 's/127.0.0.1/0.0.0.0/g' /etc/redis.conf &amp;&amp; \   sed -i 's/protected-mode yes/protected-mode no/g' /etc/redis.confEXPOSE 6379CMD ["/usr/bin/redis-server","/etc/redis.conf"][root@k8s-master-node1 Hyperf]# docker build -t hyperf-redis:v1.0 -f Dockerfile-redis .<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>镜像构建成功的 0.5 分；<br>2.Redis 服务安装成功且配置正确得 0.5 分。</li></ol><h4 id="【题目-3】容器化-Nginx-服务-0-5-分"><a href="#【题目-3】容器化-Nginx-服务-0-5-分" class="headerlink" title="【题目 3】容器化 Nginx 服务 [0.5 分]"></a>【题目 3】容器化 Nginx 服务 [0.5 分]</h4><p>编写 Dockerfile 文件构建 hyperf-nginx:v1.0 镜像，具体要求如下：（需要用到的软件包：<br>Hyperf.tar.gz）<br>（1）基础镜像：centos:7.9.2009；<br>（2）安装 nginx 服务；<br>（3）声明端口：80；<br>（4）设置服务开机自启。<br>完成后构建镜像，并提交 master 节点的用户名、密码和 IP 地址到答题框。</p><pre class="line-numbers language-none"><code class="language-none">[root@k8s-master-node1 Hyperf]# cat Dockerfile-nginxFROM centos:centos7.9.2009MAINTAINER huhyRUN rm -rf /etc/yum.repos.d/*COPY local.repo /etc/yum.repos.d/COPY yum /root/yumRUN yum -y install nginxEXPOSE 80CMD ["nginx","-g","daemon off;"][root@k8s-master-node1 Hyperf]# docker build -t hyperf-nginx:v1.0 -f Dockerfile-nginx .<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>镜像构建成功得 0.3 分；<br>2.Nginx 安装成功且配置正确得 0.2 分。</li></ol><h4 id="【题目-4】容器化-Hyperf-服务-1-分"><a href="#【题目-4】容器化-Hyperf-服务-1-分" class="headerlink" title="【题目 4】容器化 Hyperf 服务 [1 分]"></a>【题目 4】容器化 Hyperf 服务 [1 分]</h4><p>编写 Dockerfile 文件构建 hyperf-service:v1.0 镜像，具体要求如下：（需要用到的软件包：<br>Hyperf.tar.gz）<br>（1）基础镜像：centos:7.9.2009；<br>（2）安装 PHP 及扩展；<br>（3）使用源码编译安装 Swoole。<br>完成后构建镜像，并提交 master 节点的用户名、密码和 IP 地址到答题框。</p><pre class="line-numbers language-none"><code class="language-none">FROM centos:centos7.9.2009MAINTAINER huhyRUN rm -rf /etc/yum.repos.d/*# 上传repo文件COPY local.repo /etc/yum.repos.d/# 上传yum源COPY yum /root/yum# 上传swooleCOPY swoole-v4.8.3.zip /root/# 安装php及相关扩展RUN yum -y install php php-cli php-fpm php-mbstring php-pdo php-mysqlnd php-redis php-zip php-gd php-xml php-pear php-devel# 安装编译所需的工具RUN yum -y install gcc make autoconf libc-dev pkg-config# 复制Swoole源码到容器中COPY swoole-v4.8.3.zip /usr/local/src/swoole-v4.8.3.zip# 解压Swoole源码RUN yum install -y unzipRUN cd /root/ &amp;&amp; unzip swoole-v4.8.3.zip -d /usr/local/src/# 编译Swoole并安装RUN cd /usr/local/src/swoole-v4.8.3/ &amp;&amp; phpize &amp;&amp; ./configure --enable-openssl --enable-http2 --enable-sockets &amp;&amp; make &amp;&amp; make install# 设置工作目录WORKDIR /var/www# 将PHP配置文件复制到容器中COPY project /var/www/# 暴露端口EXPOSE 9501# 设置开机启动CMD ["php", "/var/www/backend/bin/hyperf.php", "start"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">[root@k8s-master-node1 Hyperf]# docker build -t hyperf-service:v1.0 -f Dockerfile-php .<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>镜像构建成功得 0.5 分；<br>2.PHP 安装成功得 0.2 分；<br>3.Swoole 安装成功得 0.3 分。</li></ol><h4 id="【题目-5】编排部署-Hyperf-框架-3-5-分"><a href="#【题目-5】编排部署-Hyperf-框架-3-5-分" class="headerlink" title="【题目 5】编排部署 Hyperf 框架 [3.5 分]"></a>【题目 5】编排部署 Hyperf 框架 [3.5 分]</h4><p>编写 / root/hyperf/project/docker-compose.yaml 文件，具体要求如下：<br>（1）容器 1 名称：hyperf-mysql；镜像：hyperf-mariadb:v1.0；端口映射：3306:3306；<br>（2）容器 2 名称：hyperf-redis；镜像：hyperf-redis:v1.0；<br>（3）容器 3 名称：hyperf-ui；镜像：hyperf-nginx:v1.0；端口映射：80:8081；<br>（4）容器 4 名称：hyperf-service；镜像：hyperf-service:v1.0。<br>完成后编排部署 Hyperf 框架，并提交 master 节点的用户名、密码和 IP 地址到答题框。</p><pre class="line-numbers language-none"><code class="language-none">version: '3.1'services:  app:    container_name: hyperf-service    image:  hyperf-service:v1.0    command:      - /bin/sh      - -c      - |    #下面都是启动容器后服务会执行的命名        cd /data        cp .env.dev.docker .env        php -d memory_limit=-1 `which composer` i --no-dev        rm -rf runtime/*        php bin/hyperf.php start    volumes:      - ./backend:/data    tty: true    links:      - mysql      - redis    environment:      HOST_IP: 127.0.0.1      HOST_PORT: 9511  mysql:    container_name: hyperf-mysql    image: hyperf-mariadb:v1.0    ports:      - 3306:3306    restart: always  redis:    image: hyperf-redis:v1.0    container_name: hyperf-redis    restart: always  nginx:    image: hyperf-nginx:v1.0    container_name: hyperf-nginx    ports:      - 8081:80    links:      - app    volumes:      - ./conf.d/:/etc/nginx/conf.d      - ./docker/log:/var/log/nginx      - ./frontend:/var/www/frontend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>.docker-compose.yaml 文件编排成功得 1.5 分；<br>2.8081 端口访问服务成功得 1 分；<br>3.Hyperf-service 连接数据库和 Redis 成功得 1 分。</p>]]></content>
      
      
      <categories>
          
          <category> 赛题 </category>
          
          <category> 容器云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 容器云 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
